// Code generated by numeric_vec_typemap.gen.go.tmpl. DO NOT EDIT.
package data

import (
	"github.com/factset/go-drill/internal/rpc/proto/common"
	"github.com/factset/go-drill/internal/rpc/proto/exec/shared"
)

func NewNumericValueVec(rawData []byte, meta *shared.SerializedField) DataVector {
	if meta.GetMajorType().GetMode() == common.DataMode_OPTIONAL {
		switch meta.GetMajorType().GetMinorType() {

		case common.MinorType_BIGINT:
			return NewNullableInt64Vector(rawData, meta)

		case common.MinorType_INT:
			return NewNullableInt32Vector(rawData, meta)

		case common.MinorType_FLOAT8:
			return NewNullableFloat64Vector(rawData, meta)

		case common.MinorType_FLOAT4:
			return NewNullableFloat32Vector(rawData, meta)

		case common.MinorType_SMALLINT:
			return NewNullableInt16Vector(rawData, meta)

		case common.MinorType_TINYINT:
			return NewNullableInt8Vector(rawData, meta)

		default:
			return nil
		}
	}

	switch meta.GetMajorType().GetMinorType() {

	case common.MinorType_BIGINT:
		return NewInt64Vector(rawData, meta)

	case common.MinorType_INT:
		return NewInt32Vector(rawData, meta)

	case common.MinorType_FLOAT8:
		return NewFloat64Vector(rawData, meta)

	case common.MinorType_FLOAT4:
		return NewFloat32Vector(rawData, meta)

	case common.MinorType_SMALLINT:
		return NewInt16Vector(rawData, meta)

	case common.MinorType_TINYINT:
		return NewInt8Vector(rawData, meta)

	default:
		return nil
	}
}
